---
name: Check and deploy to AWS

on:
  push:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  AWS_REGION: eu-west-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: jdx/mise-action@v2

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          extra_plugins: |
            conventional-changelog-conventionalcommits@8.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Get version
        run: |
          if [ "${{ steps.semantic.outputs.new_release_published }}" = "true" ]; then
            echo "RELEASE_VERSION=${{ steps.semantic.outputs.new_release_version }}" >> $GITHUB_ENV
            echo "New release: ${{ steps.semantic.outputs.new_release_version }}"
          else
            echo "RELEASE_VERSION=${{ steps.semantic.outputs.last_release_version }}" >> $GITHUB_ENV
            echo "No new release, using last release: ${{ steps.semantic.outputs.last_release_version }}"
          fi

      - name: Build Go binary
        run: ./run ci:go-build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Check Packer configuration
        run: ./run ci:check-packer

      - name: Check Terraform configuration
        run: ./run ci:check-terraform

      - name: Build Packer image
        run: ./run ci:packer-build ${{ env.RELEASE_VERSION }}

      - name: Plan Terraform
        run: ./run ci:terraform-plan ${{ env.RELEASE_VERSION }}

      - name: Deploy Terraform
        run: ./run ci:terraform-apply ${{ env.RELEASE_VERSION }}

      - name: Test deployment
        run: |
          sleep 60
          ./run ci:test-deployment
